/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mcs;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.DateTimeSyntax;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author Mohomed Faizal Aadil
 */
public class Receptionist extends javax.swing.JFrame {

    
   
    /**
     * Creates new form Receptionist
     */
    public Receptionist() {
        setResizable(false);
        initComponents(); 
        show_doctor();
        tblDoctors.setAutoCreateRowSorter(true);
        java.util.Date date=java.sql.Date.valueOf(java.time.LocalDate.now());
        date_chooser.setMinSelectableDate(date);
     
    }

    public ArrayList<Doctors> doctorList(){
        ArrayList<Doctors> doctorList = new ArrayList<>();
        try{
                    Connection con = ChannellingDB.myConnection();                  
                    String sql = "SELECT * FROM doctordetails";
                    PreparedStatement pst = con.prepareStatement(sql);

                 ResultSet rs = pst.executeQuery();
                 Doctors doctor;

                 while(rs.next()){
                     doctor =new Doctors(rs.getInt("dID"),rs.getString("dName"),rs.getString("dSpeciality"));
                    doctorList.add(doctor);   
                 
                 }
        }catch(Exception e){
            System.out.println(e);
        }
        return doctorList;
    }
    
    public void show_doctor(){
            ArrayList<Doctors> list = doctorList();
            DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
            Object[] row = new Object [3];
            for(int i=0;i<list.size();i++){
                //row[0]=list.get(i).getdID();
                row[0]=list.get(i).getdName();
                row[1]=list.get(i).getdSpeciality();
                model.addRow(row);
            }
    }
    
            
            
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtFname = new javax.swing.JTextField();
        txtLname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        btnViewAppointment = new javax.swing.JButton();
        btnCreateAppointment = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cmbTitle = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtAppno = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        cmbTime = new javax.swing.JComboBox<>();
        date_chooser = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctors = new javax.swing.JTable();
        txtDName = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JFormattedTextField();
        txtAge = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(223, 246, 255));

        jLabel1.setFont(new java.awt.Font("Orator Std", 0, 36)); // NOI18N
        jLabel1.setText("RECEPTIONIST");

        jLabel8.setIcon(new javax.swing.ImageIcon("E:\\ICBT FI\\Sem 4\\FINAL PRO\\Now\\Final Project codes\\MCS\\Images\\icons8-receptionist-64.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(663, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 100));

        jPanel2.setBackground(new java.awt.Color(59, 172, 182));

        jLabel2.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel2.setText("First Name");

        txtFname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFnameFocusLost(evt);
            }
        });
        txtFname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFnameMouseClicked(evt);
            }
        });

        txtLname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLnameFocusLost(evt);
            }
        });
        txtLname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtLnameMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel3.setText("Last Name");

        jLabel4.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel4.setText("Age");

        jLabel5.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel5.setText("Doctor Name");

        jLabel6.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel6.setText("Appoinment Time");

        jLabel7.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel7.setText("Phone Number");

        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnViewAppointment.setText("View All Appoinments");
        btnViewAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAppointmentActionPerformed(evt);
            }
        });

        btnCreateAppointment.setText("Create Appointment");
        btnCreateAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAppointmentActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel10.setText("Title");

        cmbTitle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Ms." }));

        jLabel11.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel11.setText("Appointment No");

        jLabel9.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel9.setText("Appoinment Date");

        cmbTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "07:00 A.M", "07:15 A.M", "07:30 A.M", "07:45 A.M", "08:00 A.M", "08:15 A.M", "08:30 A.M", "08:45 A.M", "09:00 A.M", "09:15 A.M", "09:30 A.M", "09:45 A.M", "10:00 A.M", "10:15 A.M", "10:30 A.M", "10:45 A.M", "11:00 A.M", "11:15 A.M", "11:30 A.M", "11:45 A.M", "01:00 P.M", "01:15 P.M", "01:30 P.M", "01:45 P.M", "02:00 P.M", "02:15 P.M", "02:30 P.M", "02:45 P.M", "03:00 P.M", "03:15 P.M", "03:30 P.M", "03:45 P.M", "04:00 P.M", "04:15 P.M", "04:30 P.M", "04:45 P.M", "05:00 P.M", "05:15 P.M", "05:30 P.M", "05:45 P.M", "06:00 P.M", "06:15 P.M", "06:30 P.M", "06:45 P.M", " ", " ", " " }));

        tblDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name", "Doctor Speciality"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoctors.getTableHeader().setReorderingAllowed(false);
        tblDoctors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctorsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDoctors);

        txtDName.setEnabled(false);

        try {
            txtPhoneNo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+947########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtAge.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtAppno, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cmbTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLname, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                                    .addComponent(txtPhoneNo))))
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(34, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(127, 127, 127)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtDName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(btnLogout)
                .addGap(523, 523, 523)
                .addComponent(btnViewAppointment)
                .addGap(53, 53, 53)
                .addComponent(btnCreateAppointment)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator2)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtAppno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cmbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(btnLogout))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnViewAppointment)
                                .addComponent(btnCreateAppointment))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(txtDName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(155, 155, 155))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(143, 143, 143)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(433, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 92, 1070, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        Login logout = null;
        try {
            logout = new Login();
        } catch (SQLException ex) {
            Logger.getLogger(Receptionist.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex,"ERROR!",JOptionPane.ERROR_MESSAGE);
        }
        logout.show();
        dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnViewAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAppointmentActionPerformed
        // TODO add your handling code here:
        
        int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to view all Appointments?", "VIEW APPOINTMENT",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(response==JOptionPane.YES_OPTION){
                ViewAllAppoinments appointments = new ViewAllAppoinments();
                appointments.show();
                dispose();
            }    
    }//GEN-LAST:event_btnViewAppointmentActionPerformed

    private void btnCreateAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAppointmentActionPerformed
    String appNo = txtAppno.getText();
    String title = cmbTitle.getSelectedItem().toString();
    String firstname = txtFname.getText();
    String lastname = txtLname.getText();
    String age = txtAge.getText();
    String doctor = txtDName.getText();
    String time = cmbTime.getSelectedItem().toString();   
    String patientCno = txtPhoneNo.getText();
    
 
    
    
    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
    String date = sdf.format(date_chooser.getDate());    
   
     Base64.Encoder encoder = Base64.getEncoder();      
        String etitle = encoder.encodeToString(title.getBytes());
        String efirstname = encoder.encodeToString(firstname.getBytes());
        String elastname = encoder.encodeToString(lastname.getBytes());
        String eage = encoder.encodeToString(age.getBytes());     
       
        
    int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to Create a New Appointment?", "ADD APPOINTMENT",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(response==JOptionPane.YES_OPTION){
            
            try {             
                 Statement s = ChannellingDB.myConnection().createStatement();
            s.executeUpdate(" INSERT INTO appointment (AppointmentNo,AppointmentDate,AppointmentTime,pTitle,pFname,pLname,pContactno,pAge,dName) VALUES ('"+appNo+"','"+date+"','"+time+"','"+etitle+"','"+efirstname+"','"+elastname+"','"+patientCno+"','"+eage+"','"+doctor+"') ");  
              

            JOptionPane.showMessageDialog(this, "Appointment Details have been sent to Patient! Details saved in Database!");
            
                sendSMS api = new sendSMS();
           try {
               api.sms("mcs2k22","2022MCS@2k22",patientCno,"Good Day "+title+""+firstname+" "+lastname+"! Your Appointment with Dr."+doctor+" has been scheduled at "+time+" on "+date+". Your Appointment No is: "+appNo+". Thank You!");
           } catch (Exception ex) {
               System.out.println(ex);
           }

               txtAppno.setText(null);
                txtFname.setText(null);
               txtLname.setText(null);
               txtAge.setText(null);
                txtPhoneNo.setText(null);

                   } 
            catch (Exception e) {
                JOptionPane.showMessageDialog(this,e,"ERROR!",JOptionPane.ERROR_MESSAGE);    
                txtAppno.setText(null);
                txtFname.setText(null);
               txtLname.setText(null);
               txtAge.setText(null);       
               txtPhoneNo.setText(null);
            } 
        }
       
        
    }//GEN-LAST:event_btnCreateAppointmentActionPerformed

    private void tblDoctorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctorsMouseClicked
        int i=tblDoctors.getSelectedRow();
        TableModel model=tblDoctors.getModel();
        
       txtDName.setText(model.getValueAt(i,0).toString());
    }//GEN-LAST:event_tblDoctorsMouseClicked

    private void txtFnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFnameFocusLost
        int lowerCount = 0 ;
                             
        int digitCount = 0 ;
        int charCount = 0 ;
        //txtFname.setForeground(Color.black);
        String name = txtFname.getText();  
        
        if(name.equals("")){
            JOptionPane.showMessageDialog(this,"This textbox cannot be Empty!!");
            
        }else{
          
        String output = name.substring(0,1).toUpperCase() + name.substring(1);
        
        int inputLen = name.length();
         
          for ( int i = 0 ; i < inputLen ; i ++ ) {
                char ch = name.charAt(i);
            if ( Character.isLowerCase ( ch ) ){
                lowerCount ++ ;
            }else if ( Character.isDigit ( ch ) ){
                digitCount ++ ;
            }else if (Character.isSpaceChar(ch)){
                charCount ++ ;
            }
        }
        if(lowerCount >= 2 && digitCount == 0 && charCount == 0){
             txtFname.setText(output);
             
        }else{
             
            if ( lowerCount < 2 ){
                //low = "Lowercase letters";
                JOptionPane.showMessageDialog(this, "Enter atleast 2 lowercase letters");
            } if ( digitCount > 0 ){
                //digit = "Numbers";
                JOptionPane.showMessageDialog(this, "Digits or Numbers aren't allowed");
            } if (charCount > 0){
                JOptionPane.showMessageDialog(this, "Spaces are not allowed");
            }
            //JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+up+" "+low+" "+digit+"");
        }
        }
    }//GEN-LAST:event_txtFnameFocusLost

    private void txtFnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFnameMouseClicked
        txtFname.setText(null);
    }//GEN-LAST:event_txtFnameMouseClicked

    private void txtLnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLnameFocusLost
        int lowerCount = 0 ;
                             
        int digitCount = 0 ;
        int charCount = 0 ;
        //txtFirstName.setForeground(Color.black);
        String name = txtLname.getText();  
        
        if(name.equals("")){
            JOptionPane.showMessageDialog(this,"This textbox cannot be Empty!!");
            
        }else{
          
        String output = name.substring(0,1).toUpperCase() + name.substring(1);
        
        int inputLen = name.length();
         
          for ( int i = 0 ; i < inputLen ; i ++ ) {
                char ch = name.charAt(i);
            if ( Character.isLowerCase ( ch ) ){
                lowerCount ++ ;
            }else if ( Character.isDigit ( ch ) ){
                digitCount ++ ;
            }else if (Character.isSpaceChar(ch)){
                charCount ++ ;
            }
        }
        if(lowerCount >= 2 && digitCount == 0 && charCount == 0){
             txtLname.setText(output);
             
        }else{
             
            if ( lowerCount < 2 ){
                //low = "Lowercase letters";
                JOptionPane.showMessageDialog(this, "Enter atleast 2 lowercase letters");
            } if ( digitCount > 0 ){
                //digit = "Numbers";
                JOptionPane.showMessageDialog(this, "Digits or Numbers aren't allowed");
            } if (charCount > 0){
                JOptionPane.showMessageDialog(this, "Spaces are not allowed");
            }
            //JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+up+" "+low+" "+digit+"");
        }
        }
    }//GEN-LAST:event_txtLnameFocusLost

    private void txtLnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLnameMouseClicked
        txtLname.setText(null);
    }//GEN-LAST:event_txtLnameMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receptionist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receptionist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receptionist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receptionist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Receptionist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateAppointment;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnViewAppointment;
    private javax.swing.JComboBox<String> cmbTime;
    private javax.swing.JComboBox<String> cmbTitle;
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblDoctors;
    private javax.swing.JFormattedTextField txtAge;
    private javax.swing.JTextField txtAppno;
    private javax.swing.JTextField txtDName;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtLname;
    private javax.swing.JFormattedTextField txtPhoneNo;
    // End of variables declaration//GEN-END:variables
}
