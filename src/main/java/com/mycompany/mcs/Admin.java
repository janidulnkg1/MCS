/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mcs;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Base64;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import javax.swing.table.TableModel;


/**
 *
 * @author Mohomed Faizal Aadil
 */
public class Admin extends javax.swing.JFrame {

   ResultSet sr; 
    /**
     * Creates new form Admin
     */
    public Admin() {
        setResizable(false);
        initComponents();
        tblUsers.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        btnCreateDoctorAccount = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnCreateEmployeeAccount = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtlUsername = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        updateBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        txtUserID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtLCPassword = new javax.swing.JPasswordField();
        txtLPassword = new javax.swing.JPasswordField();
        lblPass = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(223, 246, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon("E:\\ICBT FI\\Sem 4\\FINAL PRO\\Now\\Final Project codes\\MCS\\Images\\icons8-search-40.png")); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon("E:\\ICBT FI\\Sem 4\\FINAL PRO\\Now\\Final Project codes\\MCS\\Images\\icons8-administrator-64.png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Orator Std", 0, 36)); // NOI18N
        jLabel2.setText("ADMINISTRATOR");

        jTextField1.setBackground(new java.awt.Color(223, 246, 255));
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        txtSearch.setBackground(new java.awt.Color(223, 246, 255));
        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 100));

        jPanel2.setBackground(new java.awt.Color(59, 172, 182));

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "userID", "Login Username", "User Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsers.getTableHeader().setReorderingAllowed(false);
        tblUsers.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblUsersFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblUsersFocusLost(evt);
            }
        });
        tblUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsersMouseClicked(evt);
            }
        });
        tblUsers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblUsersKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsers);

        btnCreateDoctorAccount.setText("Create Doctor Account");
        btnCreateDoctorAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDoctorAccountActionPerformed(evt);
            }
        });

        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnCreateEmployeeAccount.setText("Create Employee Account");
        btnCreateEmployeeAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEmployeeAccountActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel5.setText("UserID");

        jLabel4.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel4.setText("Login Username");

        jLabel7.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel7.setText("New Password");

        updateBTN.setText("Update User Account");
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        deleteBTN.setText("Delete User Account");
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        txtUserID.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel8.setText("Confirm New Password");

        txtLPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLPasswordFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(btnLogout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreateEmployeeAccount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreateDoctorAccount)
                .addGap(54, 54, 54))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtlUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtLPassword)
                                    .addComponent(txtLCPassword))
                                .addGap(110, 110, 110)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteBTN)
                            .addComponent(updateBTN)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 945, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(updateBTN)
                        .addGap(189, 189, 189))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtlUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteBTN)
                            .addComponent(jLabel7)
                            .addComponent(txtLPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPass, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtLCPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogout)
                    .addComponent(btnCreateDoctorAccount)
                    .addComponent(btnCreateEmployeeAccount))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1070, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateDoctorAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDoctorAccountActionPerformed
        // TODO add your handling code here:
        CreateAccount CA = null;
        try {
            CA = new CreateAccount();
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex,"ERROR!",JOptionPane.ERROR_MESSAGE);
        }
        CA.show();
        dispose();
    }//GEN-LAST:event_btnCreateDoctorAccountActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        Login LO = null;
        try {
            LO = new Login();
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex,"ERROR!",JOptionPane.ERROR_MESSAGE);
        }
        LO.show();
        dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnCreateEmployeeAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEmployeeAccountActionPerformed
       new CreateEMPAccount().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnCreateEmployeeAccountActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void tblUsersFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblUsersFocusGained
     
    }//GEN-LAST:event_tblUsersFocusGained

    private void tblUsersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblUsersKeyReleased
       
    }//GEN-LAST:event_tblUsersKeyReleased

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String search = txtSearch.getText();
        DefaultTableModel dtm = (DefaultTableModel) tblUsers.getModel();
        
        try {
            Statement s = ChannellingDB.myConnection().createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex,"DATABASE ERROR!",JOptionPane.ERROR_MESSAGE);
        }
        
        int r = tblUsers.getRowCount();
        while(r-- > 0){
            dtm.removeRow(r);
        }
        try{
            ResultSet rs;
            rs = getUserDet.getData(search);
            
            while(rs.next()){
                  String luser = rs.getString("loginUsername");                  
                   String utype = rs.getString("userType");
                      
        
         //byte[] lPass = decoder.decode(loginPassword);
        //String lpass = new String(lPass);
        
                java.util.Vector v = new java.util.Vector();
                v.add(rs.getString("userID"));
                v.add(luser);             
                v.add(utype);
                
                dtm.addRow(v);
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex,"ERROR!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblUsersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblUsersFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tblUsersFocusLost

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        String Password = txtLPassword.getText().trim();
        String conPassword = txtLCPassword.getText().trim();
        
        Encoder encoder = Base64.getEncoder();
        
        String ePassword = encoder.encodeToString(Password.getBytes());

        int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to UPDATE this record?", "RECORD OPERATION",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(response==JOptionPane.YES_OPTION){
        
            try{
                if(Password.equals("")){                           
            JOptionPane.showMessageDialog(this, "Password field cannot be empty!","ERROR!",JOptionPane.WARNING_MESSAGE);
            txtLPassword.setText("");
            txtLPassword.requestFocus();
                }else if(conPassword.equals("")){                           
            JOptionPane.showMessageDialog(this, "Confirm Password field cannot be empty!","ERROR!",JOptionPane.WARNING_MESSAGE);
            txtLPassword.setText("");
            txtLCPassword.setText("");
            txtLPassword.requestFocus();           
                }else if(Password.equals(conPassword)){
                            String sql = "UPDATE userdetails SET loginUsername=?,loginPassword=? WHERE userID=? ";
                            Connection con =ChannellingDB.myConnection();
                            PreparedStatement pst = con.prepareStatement(sql);
                            pst.setString(3, txtUserID.getText());
                            pst.setString(1,txtlUsername.getText());
                            pst.setString(2,ePassword);                           
                            pst.executeUpdate();
                            JOptionPane.showMessageDialog(null, "USER ACCOUNT has been UPDATED Successfully!");                
                            txtUserID.setText("");
                            txtlUsername.setText("");
                            txtLPassword.setText("");
                            txtLCPassword.setText("");
                }else{
                    JOptionPane.showMessageDialog(this, "Passwords do not Match. Please Try again!","ERROR!",JOptionPane.ERROR_MESSAGE);
                    txtLPassword.setText("");
                    txtLCPassword.setText("");
                }                
            }catch(Exception e){
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_updateBTNActionPerformed

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        String admin = "Admin";
        String doctor = "Doctor";
        String receptionist = "Receptionist";
        String Password = txtLCPassword.getText().trim();
   
        
        int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to DELETE this record?", "RECORD OPERATION",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(response==JOptionPane.YES_OPTION){
        
            try{
                
                
                    String dsql = "DELETE FROM userdetails WHERE userID=?";
                    String ssql = "SELECT * FROM userdetails ";

//                    String Doctor = "Doctor";
//                    String Receptionist = "Receptionist";
                    Connection con = ChannellingDB.myConnection();
                    PreparedStatement pst = con.prepareStatement(ssql);
                     PreparedStatement dpst = con.prepareStatement(dsql);

                    dpst.setString(1,txtUserID.getText());              
                    sr=pst.executeQuery();
                        try{

                            if(sr.next()){
                                String userType = sr.getString("userType");
                                String userID=sr.getString("userID");
                                    if(userType.equals(doctor)){
                                        dpst.executeUpdate();           
                                        JOptionPane.showMessageDialog(null, "Account has been DELETED Successfully!");
                                        txtlUsername.setText("");
                                        txtLPassword.setText("");
                                        txtLCPassword.setText("");
                                    }else if(userType.equals(receptionist)){
                                        dpst.executeUpdate(); 
                                        txtlUsername.setText("");
                                          txtLPassword.setText("");
                                        txtLCPassword.setText("");
                                        JOptionPane.showMessageDialog(null, "Account has been DELETED Successfully!"); 
                                    }
                            }

                        }catch(Exception e){
                            JOptionPane.showMessageDialog(this, e);
                        }
                
            }catch(Exception e){
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void tblUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsersMouseClicked
      int i=tblUsers.getSelectedRow();
        TableModel model=tblUsers.getModel();
         
         txtUserID.setText(model.getValueAt(i,0).toString());
 
        
       txtlUsername.setText(model.getValueAt(i,1).toString());
      
    }//GEN-LAST:event_tblUsersMouseClicked

    private void txtLPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLPasswordFocusLost
        int upperCount = 0 ;
        int lowerCount = 0 ;
                             
        int digitCount = 0 ;
        String password = txtLPassword.getText();  
        
        if(password.equals("")){
            lblPass.setText("Password field cannot be Empty!!");
        }else{
              
        int inputLen = password.length();
         
        for ( int i = 0 ; i < inputLen ; i ++ ) {
                char ch = password.charAt(i);
            if ( Character.isUpperCase ( ch ) ){
                upperCount ++ ;
            }else if ( Character.isLowerCase ( ch ) ){
                lowerCount ++ ;
            }else if ( Character.isDigit ( ch ) ){
                digitCount ++ ;
            }
        }
        if(upperCount >= 3 && lowerCount >= 3 && digitCount >= 1){
             //System.out.println ( " Valid password " ) ;
              lblPass.setText("Password is Valid");
        }else{
            String up = "Minimum 3 Uppercase letters";
            String low = "Minimu 3 Lowercase letters";
            String digit = "Numbers";
            if ( upperCount < 3 ){
                //up = "Uppercase letters";
                JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+up+"");
            } if ( lowerCount < 3 ){
                //low = "Lowercase letters";
                JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+low+"");
            } if ( digitCount < 1 ){
                //digit = "Numbers";
                JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+digit+"");
            }
            //JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+up+" "+low+" "+digit+"");
        }
        }
    }//GEN-LAST:event_txtLPasswordFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateDoctorAccount;
    private javax.swing.JButton btnCreateEmployeeAccount;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblPass;
    private javax.swing.JTable tblUsers;
    private javax.swing.JPasswordField txtLCPassword;
    private javax.swing.JPasswordField txtLPassword;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JTextField txtlUsername;
    private javax.swing.JButton updateBTN;
    // End of variables declaration//GEN-END:variables
}
