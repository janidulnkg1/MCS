/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mcs;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Base64;
import java.util.Base64.Encoder;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author 
 */
public class CreateAccount extends javax.swing.JFrame {

      
    /**
     * Creates new form CreateAccount
     */
    public CreateAccount() throws SQLException {
        setResizable(false);
        initComponents();
                
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        cmbSpeciality = new javax.swing.JComboBox<>();
        btnCreateAccount = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtCPassword = new javax.swing.JPasswordField();
        lblPASS = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(223, 246, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1070, 100));

        jLabel1.setIcon(new javax.swing.ImageIcon("E:\\ICBT FI\\Sem 4\\FINAL PRO\\Latest\\Final Project codes\\MCS\\Images\\icons8-add-user-64.png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Orator Std", 0, 36)); // NOI18N
        jLabel2.setText("DOCTOR CREATE ACCOUNT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(485, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel2.setBackground(new java.awt.Color(59, 172, 182));

        jLabel3.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel3.setText("Last Name");

        jLabel4.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel4.setText("User Name");

        jLabel5.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel5.setText("Password");

        jLabel6.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel6.setText("Confirm Password");

        jLabel7.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel7.setText("Speciality");

        txtLastName.setToolTipText("");
        txtLastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLastNameFocusLost(evt);
            }
        });
        txtLastName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtLastNameMouseClicked(evt);
            }
        });

        cmbSpeciality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---SELECT-----", "General Physician", "Paediatrician", "Radiologist", "Cardiologist", "Neurologist", "Nephrologist", "VOG (OB/GYN)", "Orthopedic Surgeon", " " }));

        btnCreateAccount.setText("Create");
        btnCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAccountActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 18)); // NOI18N
        jLabel8.setText("First Name");

        txtFirstName.setToolTipText("");
        txtFirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFirstNameFocusLost(evt);
            }
        });
        txtFirstName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFirstNameMouseClicked(evt);
            }
        });

        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(82, 82, 82))
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPASS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUsername)
                    .addComponent(cmbSpeciality, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPassword)
                    .addComponent(txtCPassword)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreateAccount)
                .addGap(132, 132, 132))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(84, 84, 84)
                    .addComponent(btnBack)
                    .addContainerGap(914, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPASS, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(57, 57, 57)
                .addComponent(btnCreateAccount)
                .addContainerGap(122, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(381, Short.MAX_VALUE)
                    .addComponent(btnBack)
                    .addGap(117, 117, 117)))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1070, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        Admin admin = new Admin();
        admin.show();
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAccountActionPerformed
    String firstName = txtFirstName.getText();
    String lastName = txtLastName.getText();
    String userName = txtUsername.getText();
    String Password = txtPassword.getText().trim();
    String conPassword = txtCPassword.getText().trim();
    String speciality = cmbSpeciality.getSelectedItem().toString();
    String userType = "Doctor";
    
    
    Encoder encoder = Base64.getEncoder();  

    String ePassword = encoder.encodeToString(Password.getBytes());
        
        
    int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to Create a DOCTOR Account?", "ADD USER",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(response==JOptionPane.YES_OPTION){
                if (Password.equals(conPassword))
                   {              
                     try {             
                          Statement s = ChannellingDB.myConnection().createStatement();
                     s.executeUpdate(" INSERT INTO userdetails (loginUsername,loginPassword,userType) VALUES ('"+userName+"','"+ePassword+"','"+userType+"') ");  
                     s.executeUpdate(" INSERT INTO doctordetails (dName,dSpeciality) VALUES ('"+firstName+" "+lastName+"','"+speciality+"') ");

                     JOptionPane.showMessageDialog(this, "Doctor Details have been saved!");

                        txtFirstName.setText(null);
                        txtLastName.setText(null);
                        txtUsername.setText(null);
                        txtPassword.setText(null);
                        txtCPassword.setText(null);

                            } 
                     catch (Exception e) {
                         JOptionPane.showMessageDialog(this,e,"ERROR!",JOptionPane.ERROR_MESSAGE);;       
                     }         
                    }
                else
                    {
                    JOptionPane.showMessageDialog(this,"Passwords Do not Match!","Password Error",JOptionPane.ERROR_MESSAGE);
                    txtPassword.setText(null);
                    txtCPassword.setText(null);
                    }       
        }
    }//GEN-LAST:event_btnCreateAccountActionPerformed

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        int upperCount = 0 ;
        int lowerCount = 0 ;
                             
        int digitCount = 0 ;
        String password = txtPassword.getText();  
        
        if(password.equals("")){
            lblPASS.setText("Password field cannot be Empty!!");
            lblPASS.setForeground(Color.red);
        }else{
              
        int inputLen = password.length();
         
        for ( int i = 0 ; i < inputLen ; i ++ ) {
                char ch = password.charAt(i);
            if ( Character.isUpperCase ( ch ) ){
                upperCount ++ ;
            }else if ( Character.isLowerCase ( ch ) ){
                lowerCount ++ ;
            }else if ( Character.isDigit ( ch ) ){
                digitCount ++ ;
            }
        }
        if(upperCount >= 3 && lowerCount >= 3 && digitCount >= 1){
             //System.out.println ( " Valid password " ) ;
             lblPASS.setForeground(Color.black);
              lblPASS.setText("Password is Valid");
        }else{
            String up = "Uppercase letters";
            String low = "Lowercase letters";
            String digit = "Numbers";
            if ( upperCount < 3 ){
                //up = "Uppercase letters";
                JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+up+"");
            } if ( lowerCount < 3 ){
                //low = "Lowercase letters";
                JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+low+"");
            } if ( digitCount < 1 ){
                //digit = "Numbers";
                JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+digit+"");
            }
            //JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+up+" "+low+" "+digit+"");
        }
        }
    }//GEN-LAST:event_txtPasswordFocusLost

    private void txtFirstNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFirstNameFocusLost
        //int upperCount = 0 ;
        int lowerCount = 0 ;
                             
        int digitCount = 0 ;
        int charCount = 0 ;
        //txtFirstName.setForeground(Color.black);
        String name = txtFirstName.getText();  
        
        if(name.equals("")){
            JOptionPane.showMessageDialog(this,"This textbox cannot be Empty!!");
            
        }else{
          
        String output = name.substring(0,1).toUpperCase() + name.substring(1);
        
        int inputLen = name.length();
         
          for ( int i = 0 ; i < inputLen ; i ++ ) {
                char ch = name.charAt(i);
            if ( Character.isLowerCase ( ch ) ){
                lowerCount ++ ;
            }else if ( Character.isDigit ( ch ) ){
                digitCount ++ ;
            }else if (Character.isSpaceChar(ch)){
                charCount ++ ;
            }
        }
        if(lowerCount >= 2 && digitCount == 0 && charCount == 0){
             txtFirstName.setText(output);
             
        }else{
             
            if ( lowerCount < 2 ){
                //low = "Lowercase letters";
                JOptionPane.showMessageDialog(this, "Enter atleast 2 lowercase letters");
            } if ( digitCount > 0 ){
                //digit = "Numbers";
                JOptionPane.showMessageDialog(this, "Digits or Numbers aren't allowed");
            } if (charCount > 0){
                JOptionPane.showMessageDialog(this, "Spaces are not allowed");
            }
            //JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+up+" "+low+" "+digit+"");
        }
        }
    }//GEN-LAST:event_txtFirstNameFocusLost

    private void txtFirstNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFirstNameMouseClicked
        txtFirstName.setText(null);
    }//GEN-LAST:event_txtFirstNameMouseClicked

    private void txtLastNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLastNameFocusLost
        int lowerCount = 0 ;
                             
        int digitCount = 0 ;
        int charCount = 0 ;
        //txtLastName.setForeground(Color.black);
        String name = txtLastName.getText();  
        
        if(name.equals("")){
            //txtLastName.setForeground(Color.red);
            JOptionPane.showMessageDialog(this,"This textbox cannot be Empty!!");
            
        }else{
          
        String output = name.substring(0,1).toUpperCase() + name.substring(1);
        
        int inputLen = name.length();
        
          for ( int i = 0 ; i < inputLen ; i ++ ) {
                char ch = name.charAt(i);
            if ( Character.isLowerCase ( ch ) ){
                lowerCount ++ ;
            }else if ( Character.isDigit ( ch ) ){
                digitCount ++ ;
            }else if (Character.isSpaceChar(ch)){
                charCount ++ ;
            }
        }
        if(lowerCount >= 2 && digitCount == 0 && charCount == 0){
             txtLastName.setText(output);
             
        }else{
             
            if ( lowerCount < 2 ){
                
                JOptionPane.showMessageDialog(this, "Enter atleast 2 lowercase letters");
            } if ( digitCount > 0 ){
                
                JOptionPane.showMessageDialog(this, "Digits or Numbers aren't allowed");
            } if (charCount > 0){
                JOptionPane.showMessageDialog(this, "Spaces are not allowed");
            }
            //JOptionPane.showMessageDialog(this, "The password did not have enough of the following: "+up+" "+low+" "+digit+"");
        }
        }
    }//GEN-LAST:event_txtLastNameFocusLost

    private void txtLastNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLastNameMouseClicked
        txtLastName.setText(null);
    }//GEN-LAST:event_txtLastNameMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CreateAccount().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateAccount;
    private javax.swing.JComboBox<String> cmbSpeciality;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblPASS;
    private javax.swing.JPasswordField txtCPassword;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
